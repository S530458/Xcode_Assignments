//: Playground - noun: a place where people can play
//: Author - noun: C R S Karthik
import UIKit

//Question 01
func diff(_ value1:Double,_ value2:Double)->Double{
    let diff:Double=value1-value2
        return diff>=0.0 ? diff : -diff
}
func middling(first:Int,second:Int,third:Int) -> Int{
    let avg:Double=Double(first+second+third)/3.0
    if(diff(Double(first), avg).isLess(than: diff(Double(second), avg))&&diff(Double(first), avg).isLess(than: diff(Double(third), avg))){
        return first
    }else if(diff(Double(second), avg).isLess(than: diff(Double(third), avg))){
        return second
    }else{
        return third
    }
}

//Question 02
print("Middle number of 1,2,5",middling(first:1,second:2,third:5))
print(middling(first:5,second:1,third:2))
print(middling(first:1,second:1000,third:1))
print(middling(first:2,second:2,third:2))
print(middling(first:3,second:1,third:2))
print(middling(first:3,second:1,third:1))

//Question 03
func scrabbleScore(ofWord word:String) -> Int {
    let charArray = Array(word)
    var score = 0
    for char in charArray{
        switch char {
        case "A","E","I","O","U","L","N","R","S","T":
            score += 1
            break
        case "D","G":
            score += 2
            break
        case "B","C","M","P":
            score += 3
            break
        case "H","F","V","W","Y":
            score += 4
            break
        case "K":
            score += 5
            break
        case "J","X":
            score += 8
            break
        case "Q","Z":
            score += 10
            break
        default:
            score += 0
        }
    }
    return score
}

//Question 04
print(scrabbleScore(ofWord: "Hello"))
print(scrabbleScore(ofWord: "HELLO"))
print(scrabbleScore(ofWord: "JELLO"))
print(scrabbleScore(ofWord: "abc12d&"))
print(scrabbleScore(ofWord: "UDMPWFKJZ"))

//Question 05
func oddsOfValue(_ check:Int,values variadic:Int...) -> Double {
    var checkInValues:Double = 0
    var count:Double = 0
    for num in variadic{
        if check == num {
            checkInValues += 1
        }
        count += 1
    }
    return (checkInValues / count)
}

//Question 06
print(oddsOfValue(1, values:1,1,1,1,1,1,1,1,1))
print(oddsOfValue(2, values: 1,1,1,1,1,1))
print(oddsOfValue(3, values: 1,1,2,1,2,1,3,2,1,1))
print(oddsOfValue(4, values: 4,1,4,2,4,4,3,3))
print(oddsOfValue(5, values: 5,15,1,5,1,2,1,3,1))

//Question 07
class AnnoyingKid {
    var count:Int
    var message:String
    init(count:Int,message:String) {
        self.count=count
        self.message=message
    }
    func speakUp() -> String {
        var finalString:String = ""
        for _ in 1...count {
            finalString += message
        }
        return finalString
    }
}

//Question 08
var kid1 = AnnoyingKid(count: 3, message: "hiya")
var kid2 = AnnoyingKid(count: 4, message: "Whatcha doing?")
print(kid1.speakUp())
print(kid2.speakUp())
kid1.message = "zup"
print(kid1.speakUp())
print(kid2.speakUp())

//Question 09
struct MaybeLogic {
    var probability:Double
    init() {
        self.probability=0.0
    }
    init(probability:Double) {
        self.probability=probability
    }
    func not() -> MaybeLogic {
        return MaybeLogic(probability: 1.0-self.probability)
    }
    func and(other:MaybeLogic) -> MaybeLogic {
        return MaybeLogic(probability: probability*other.probability)
    }
    func or(other:MaybeLogic) -> MaybeLogic {
        return MaybeLogic(probability: self.probability+other.probability-(self.probability*other.probability))
    }
}

//Question 10
var p1=MaybeLogic(probability: 1/3)
var p2=MaybeLogic(probability: 1/2)
var p3=MaybeLogic(probability: 1)
var p4=MaybeLogic(probability: 0)

//Question 11
print(p3.not())
print(p1.and(other: p2))
print(p1.or(other: p2))
print(p2.and(other: p3))
print(p2.and(other: p4))
print(p1.or(other: p3))
print(p1.or(other: p4))

//Question 12
struct oddNumber {
    private var _oddValue:Int = 1
    var value:Int{
        get{
            return _oddValue
        }
        set{
            if newValue%2 != 0 {
                _oddValue=newValue
            }
        }
    }
    init() {
        if self._oddValue%2 == 0 {
            self._oddValue=1
        }
    }
}

var o1=oddNumber()
print(o1.value)
o1.value=3
print(o1.value)
o1.value=2
print(o1.value)
